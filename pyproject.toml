[tool.autopub]
project-name = "django-diagnostic"
git-username = "campbellmc"
git-email = "campbell@idlestate.com"
changelog-file = "docs/changelog.rst"
changelog-header = "###############"
version-header = "="
version-strings = ["pyproject.toml", "django_diagnostic/__init__.py"]
build-system = "poetry"

[tool.bandit]
exclude = ["migrations", "squashed_migrations"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  | migrations
  | squashed_migrations
)/
'''

[tool.isort]
atomic = "True"
known_first_party = "django_diagnostic"
known_django = "django"
line_length = 88
profile = "black"
remove_redundant_aliases = "True"
sections = "FUTURE,STDLIB,DJANGO,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
skip = "migrations,squashed_migrations"
src_paths = ["django_diagnostic"]

[tool.vulture]
exclude = ["migrations/", "squashed_migrations/"]
ignore_decorators = ["@task",]
make_whitelist = true
min_confidence = 80
paths = ["django_diagnostic/",]
sort_by_size = true
verbose = false

[tool.poetry]
name = "django-diagnostic"
version="1.5.0"
description="provides diagnostic pages for django application"
authors = ["DXCLABS LTD"]

[tool.poetry.dependencies]
python = "^3.9"
Django = "^4.0"
GitPython = "^3.1.27"
django-braces = "^1.15.0"

[tool.poetry.group.linters.dependencies]
bandit = {extras = ["toml"], version = "^1.7.4"}
black = "^22.6.0"
codespell = "^2.1.0"
django-upgrade = "^1.9.0"
flake8 = "^4.0.1"
isort = {extras = ["requirements_deprecated_finder"], version = "^5.10.1"}
mypy = "^0.961"
pyupgrade = "^2.34.0"
vulture = "^2.4"

[tool.poetry.group.tests.dependencies]
coverage = "^6.4.1"
factory-boy = "^3.2.1"
mock = "^4.0.3"
pytest = "^7.1.2"
pytest-django = "^4.5.2"

[tool.poetry.group.dev.dependencies]
django-debug-panel = "^0.8.3"
django-extensions = "^3.2.0"
django-snippetscream = "^0.0.7"
flake8-bugbear = "^22.8.23"
ipdb = "^0.13.9"
ipython = "^8.4.0"
pre-commit = "^2.19.0"
autopub = "^0.2.2"

[build-system]
requires = ["poetry-core>=1.1.0"]
build-backend = "poetry.core.masonry.api"
