[tool.bandit]
exclude = ["migrations", "squashed_migrations"]

[tool.black]
line-length = 120
target-version = ['py37', 'py38', 'py39', 'py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  | migrations
  | squashed_migrations
)/
'''

[tool.isort]
atomic = "True"
known_first_party = "django_diagnostic"
known_django = "django"
line_length = 120
profile = "black"
remove_redundant_aliases = "True"
sections = "FUTURE,STDLIB,DJANGO,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
skip = "migrations,squashed_migrations"
src_paths = ["django_diagnostic"]

[tool.vulture]
exclude = ["migrations/", "squashed_migrations/"]
ignore_decorators = ["@task",]
make_whitelist = true
min_confidence = 80
paths = ["django_diagnostic/",]
sort_by_size = true
verbose = false

[tool.poetry]
name = "django-diagnostic"
version="1.0.0"
description="provides diagnostic pages for django application"
authors = ["DXCLABS LTD"]

[tool.poetry.dependencies]
python = "^3.9"
GitPython = "^3.1.27"

[tool.poetry.group.linters.dependencies]
bandit = {extras = ["toml"], version = "^1.7.4"}
black = "^22.6.0"
codespell = "^2.1.0"
django-upgrade = "^1.9.0"
flake8 = "^4.0.1"
isort = {extras = ["requirements_deprecated_finder"], version = "^5.10.1"}
mypy = "^0.961"
pyupgrade = "^2.34.0"
vulture = "^2.4"

[tool.poetry.group.tests.dependencies]
coverage = "^6.4.1"
factory-boy = "^3.2.1"
mock = "^4.0.3"
pytest = "^7.1.2"
pytest-django = "^4.5.2"

[tool.poetry.group.dev.dependencies]
bump2version = "^1.0.1"
pre-commit = "^2.19.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
