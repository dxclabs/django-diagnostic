name: lint

on:
    workflow_run:
      workflows: ["ruff"]
      types:
        - completed

jobs:
  lint_python:

    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.12.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: set pythonpath
        run: |
          echo "PYTHONPATH=./django_diagnostic;./tests" >> $GITHUB_ENV

      - name: Set up poetry
        uses: Gr1N/setup-poetry@v9
        with:
            poetry-preview: true

      - name: Check poetry version
        run: poetry --version

      - name: Install testing dependencies
        run: poetry install --only linters,tests,types

      # - run: poetry run bandit -r django_diagnostic/ -c ./pyproject.toml

      # - run: shopt -s globstar && poetry run pyupgrade --py312-plus **/*.py

      # - run: poetry run black --check django_diagnostic/

      - run: poetry run ruff format --diff django_diagnostic/ tests/

      - run: poetry run codespell django_diagnostic/ docs/ tests/

      # - run: poetry run flake8 django_diagnostic/ --count --select=E9,F63,F7,F82 --show-source --statistics

      # - run: poetry run isort --check-only --profile black django_diagnostic/

      # - run: tox

      - name: Test Poetry full install
        run: poetry install

      - name: Run tests in tests/
        run: poetry run pytest tests/ || true

      - name: Run tests embedded in docstrings
        run: poetry run pytest --doctest-modules django_diagnostic/ || true
